//-------------------------------Arr Methods

//returns array with items (from, to)
**slice()
let numbList = [1, 5, 4, 6, 8, 153, 160, 176];
let res1 = numbList.slice(2, 4); // [4, 6,]; 

//returns array with items (from, count)
**splice()
let numbList = [1, 5, 4, 6, 8, 153, 160, 176];
let res1 = numbList.splice(2, 4); // [4, 6, 8, 153]; 

//returns reversed array
**reverse()
let numbList = [1, 5, 4];
numbList1 = numbList.reverse() // [4, 5, 1];

//-------------------------------methods with callback

//return first true value
**find()
let numbers = [5, 2, 13, 24, 54, 10, 13, 99, 1, 5];
let result = numbers.find((item) => !(item % 2))
console.log(result); // 2

//return arr with all true value
**filter()
const numbers = [7, -4, 32, -90, 54, 32, -21];
let ArrWIthoutNegativeNumbers = numbers.filter((item) => item >= 0)
console.log(ArrWIthoutNegativeNumbers); //[ 7, 32, 54, 32 ]

//if you need to make something with items of array
**map()
let array = [1, 2, 3, 4, 5];
let result = array.map((item) => item ** 2); // [ 1, 4, 9, 16, 25 ]

//if you need do get some primitive result from all items of array
**reduce()
let res = numbList.reduce((currentRes, item) => {
  return (currentRes += item);
});

//if you need make something with each item of arry
**forEach()
let array = [1, 2, 3, 4, 5];
let result = 0;
array.forEach((item) => {
  result += item;
}); //15

//-------------------------------every/some
//returns true if every items of the array is true
**every()
let array = [6, 8, 153, 160, 176];
const result = array.every((item) => item > 5); //true

//returns true if some items of the array is true
**some()
let numbers1 = [1, 5, 15];
let result1 = numbers1.some((item) => !(item % 3) && !(item % 5))
console.log(result1); //true

//-------------------------------Copy of array

//rest operator
let number = [1,2,3];
let updatedList = [...number,4]; // [ 1, 2, 3, 4 ]